@model EHealthCare.Model.Models.Doctor
@{
    ViewBag.Title = "Manage";
}

@{
    Layout = "~/Views/Shared/_mainView.cshtml";
}

<h2>@ViewBag.Title.</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
<div>
    <h4>Change your account settings</h4>
    <hr />
    @*<dl class="dl-horizontal">*@
        @*<dt>Password:</dt>
        <dd>
            [
            @if (Model.HasPassword)
            {
                @Html.ActionLink("Change your password", "ChangePassword")
            }
            else
            {
                @Html.ActionLink("Create", "SetPassword")
            }
            ]
        </dd>
        <dt>External Logins:</dt>
        <dd>
            @Model.Logins.Count [
            @Html.ActionLink("Manage", "ManageLogins") ]
        </dd>
        @*
            Phone Numbers can used as a second factor of verification in a two-factor authentication system.
             
             See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support two-factor authentication using SMS.
             
             Uncomment the following block after you have set up two-factor authentication
        *@
        @*  
            <dt>Phone Number:</dt>
            <dd>
                @(Model.PhoneNumber ?? "None")
                @if (Model.PhoneNumber != null)
                {
                    <br />
                    <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
                    using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
                    }
                }
                else
                {
                    <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
                }
            </dd>
        *@
        @*<dt>Two-Factor Authentication:</dt>
        <dd>
            <p>
                There are no two-factor authentication providers configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support two-factor authentication.
            </p>*@
            @*@if (Model.TwoFactor)
                {
                    using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Enabled
                        <input type="submit" value="Disable" class="btn btn-link" />
                        </text>
                    }
                }
                else
                {
                    using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Disabled
                        <input type="submit" value="Enable" class="btn btn-link" />
                        </text>
                    }
                }*@
        @*</dd>*@
    @*</dl>*@

@if (Request.IsAuthenticated && User.IsInRole("Doctor"))
{
    using (Html.BeginForm("ActualizeData", "Doctor", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Doctor</h4>
            <hr/>
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})


            <div class="form-group">
                <div class="control-label col-md-2">Imię:</div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">Nazwisko:</div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Surname, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Surname, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">Pesel:</div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Pesel, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Pesel, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">Numer telefonu:</div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Phone, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">Specjalizacja:</div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Specialization, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Specialization, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Zaktualizuj" class="btn btn-default"/>
                </div>
            </div>
        </div>
    }
}
else
{
    Response.Redirect(Url.Action("ActualizeData", "Patient"));
}

</div>
